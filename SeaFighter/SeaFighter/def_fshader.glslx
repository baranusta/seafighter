#version 430

// Output for on-screen color
layout(location = 0) out vec4 outColor;

layout(location = 1) uniform vec3 lightPos;
layout(location = 2) uniform vec3 view_pos;
layout(location = 3) uniform float time;

in vec3 fragPos; // World-space position
in vec3 fragNormal; // World-space position

void main() {
    
    vec3 lightRay = normalize(lightPos - fragPos);
    float diffuseFact = dot(lightRay, fragNormal);
    if(diffuseFact > 0.)
    {        
        vec3 toEye = normalize(view_pos - fragPos);
        vec3 reflect = -lightRay - 2. * (dot(fragNormal,-lightRay)) * fragNormal;
        float specFact = dot(toEye,reflect);
        float color =  + pow(specFact,16.);
        outColor = vec4(color * 1.0,color * 1.0,color * 1.0,1.0);
    }
    else
        outColor = vec4(.1,.6,.4,1.0);
}