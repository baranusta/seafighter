#version 430

// Output for on-screen color
layout(location = 0) out vec4 outColor;

//Global variables for ligthtining calculations
layout(location = 1) uniform sampler2D texToon ;
layout(location = 2) uniform vec3 view_pos;
layout(location = 3) uniform float time;


const vec3  lightPos = vec3(-1., 1.0 ,1.);
//Interpolated output from vertex shader
in vec3 fragPos; // World-space position
in vec3 fragNormal; //World-space position

void main() {
	vec3 lightRay = normalize(lightPos - fragPos);
	vec3 toEye = normalize(view_pos - fragPos);
	vec3 reflect = -lightRay - 2. * (dot(fragNormal, -lightRay));
    float specFact = dot(toEye, reflect);
	float color = dot(lightRay, fragNormal);

	//Blinn-phong
	color = color + pow(specFact,16.);
	outColor = texture(texToon , vec2(color , 1.)); 
	//outColor = vec4(sin(time) * 1.0,1.0,0.0,1.0);

	
	//X_toon
	/*
    float dist = length(view_pos - fragPos) - 0.5;
    //outColor = vec4(sin(time) * 1.0,1.0,0.0,1.0);
	outColor = texture(texToon , vec2(color, dist));
	*/
}



